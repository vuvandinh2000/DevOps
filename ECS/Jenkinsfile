pipeline {
    // Jenkins sd co che Master-Slave, any de chi rang co the chay o bat ky dau
    // Mac dinh: Jenkins chay tren master
    agent any

    // Dinh nghia cac bien global de ben duoi su dung
    environment {
        registryCredential = 'ecr:ap-southeast-2:awscreds' // [region].console.aws... : [Manage Jenkins -> Credentials]
        appRegistry = '701354435481.dkr.ecr.ap-southeast-2.amazonaws.com/vprofile-img' // Elastic Container Registry URI
        vprofileRegistry = 'https://701354435481.dkr.ecr.ap-southeast-2.amazonaws.com' // ECR cung giong Docker Hub
        cluster = "vprofile-cluster"
        service = "vprofileappsvc"
    }
    tools {
        // Cac bien duoc config trong Manage Jenkins -> Tools
        maven "MAVEN3"
        jdk   "OracleJDK11"
    }

    stages {
        stage('Fetch Code') {
            steps {
                // Nhieu params cua 1 plugin thi cach nhau boi dau ,
                git branch: 'docker', url: 'https://github.com/hkhcoder/vprofile-project.git'
            }
        }

        // Bo buoc build bang maven => build bang Docker

        // stage('Build') {
        //     steps {
        //         sh 'mvn install -DskipTests'
        //     }

        //     // if job successful
        //     post {
        //         success {
        //             echo 'Archiving artifacts now.'
        //             // plugin de archive cac artifact
        //             archiveArtifacts artifacts: '**/*.war'
        //         }
        //     }
        // }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Code Analysis with Checkstyle') {
            steps {
                sh 'mvn checkstyle:checkstyle'
            }
            post {
                success {
                    echo 'Generated Analysis Result'
                }
            }
        }

        stage('Sonar Analysis') {
            environment {
                // bien khai bao trong Manage Jenkins -> Tools
                scannerHome = tool 'sonar4.8'
            }
            steps {
                withSonarQubeEnv('sonar') {
                    sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                    -Dsonar.projectName=vprofile \
                    -Dsonar.projectVersion=1.0 \
                    -Dsonar.sources=src/ \
                    -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                    -Dsonar.junit.reportsPath=target/surefire-reports/ \
                    -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                    -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Build App Image') {
            steps {
                script {
                    dockerImage = docker.build(appRegistry + ":$BUILD_NUMBER", "./Docker-files/app/multistage/")
                }
            }
        }

        // stage('Upload Artifact') {
        //     steps {
        //         nexusArtifactUploader(
        //             nexusVersion: 'nexus3',
        //             protocol: 'http',
        //             nexusUrl: '172.31.13.123:8081',
        //             groupId: 'QA', // Nexus se luu cac artifact vao folder ten la QA
        //             version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
        //             repository: 'vprofile-repo', // repo-name in Nexus Server
        //             credentialsId: 'nexuslogin', // id cua username/password dang nhap Nexus duoc luu trong config cua Jenkins
        //             // Manage Jenkins -> Credentials
        //             artifacts: [
        //                 // duong dan den artifact ma Jenkins tao ra sau khi build xong
        //                 [artifactId: 'vproapp',
        //                 classifier: '',
        //                 file: 'target/vprofile-v2.war',
        //                 type: 'war']
        //             ]
        //         )
        //     }

        //     post {
        //         always {
        //             echo 'Slack Notifications.'
        //             // slackSend la plugin Slack Notification da installed
        //             slackSend channel: '#jenkinscicd', // ten channel tren Slack
        //             color: COLOR_MAP[currentBuild.currentResult], // ccrBuild.crrResult -> [SUCCESS, UNSTABLE, FAILURE]
        //             message: "*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} \n More info at: ${env.BUILD_URL}"
        //         }
        //     }
        // }

        stage('Upload App Image') {
            steps {
                script {
                    docker.withRegistry(vprofileRegistry, registryCredential) {
                        dockerImage.push("$BUILD_NUMBER")
                        dockerImage.push('latest')
                    }
                }
            }
        }

        stage('Deploy to ECS') {
            steps {
                withAWS(credentials: 'awscreds', region: 'ap-southeast-2') {
                    sh 'aws ecs update-service --cluster ${cluster} --service ${service} --force-new-deployment'
                }
            }
        }
    }
}